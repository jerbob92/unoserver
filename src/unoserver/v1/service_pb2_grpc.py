# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from unoserver.v1 import service_pb2 as unoserver_dot_v1_dot_service__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in unoserver/v1/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class UnoServerServiceStub(object):
    """A service to communicate with a headless LibreOffice process.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Convert = channel.unary_unary(
                '/unoserver.v1.UnoServerService/Convert',
                request_serializer=unoserver_dot_v1_dot_service__pb2.ConvertRequest.SerializeToString,
                response_deserializer=unoserver_dot_v1_dot_service__pb2.ConvertResponse.FromString,
                _registered_method=True)
        self.Compare = channel.unary_unary(
                '/unoserver.v1.UnoServerService/Compare',
                request_serializer=unoserver_dot_v1_dot_service__pb2.CompareRequest.SerializeToString,
                response_deserializer=unoserver_dot_v1_dot_service__pb2.CompareResponse.FromString,
                _registered_method=True)


class UnoServerServiceServicer(object):
    """A service to communicate with a headless LibreOffice process.
    """

    def Convert(self, request, context):
        """Converts a file from one type to another.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Compare(self, request, context):
        """Compare two files and convert the result from one type to another.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UnoServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Convert': grpc.unary_unary_rpc_method_handler(
                    servicer.Convert,
                    request_deserializer=unoserver_dot_v1_dot_service__pb2.ConvertRequest.FromString,
                    response_serializer=unoserver_dot_v1_dot_service__pb2.ConvertResponse.SerializeToString,
            ),
            'Compare': grpc.unary_unary_rpc_method_handler(
                    servicer.Compare,
                    request_deserializer=unoserver_dot_v1_dot_service__pb2.CompareRequest.FromString,
                    response_serializer=unoserver_dot_v1_dot_service__pb2.CompareResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'unoserver.v1.UnoServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UnoServerService(object):
    """A service to communicate with a headless LibreOffice process.
    """

    @staticmethod
    def Convert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/unoserver.v1.UnoServerService/Convert',
            unoserver_dot_v1_dot_service__pb2.ConvertRequest.SerializeToString,
            unoserver_dot_v1_dot_service__pb2.ConvertResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Compare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/unoserver.v1.UnoServerService/Compare',
            unoserver_dot_v1_dot_service__pb2.CompareRequest.SerializeToString,
            unoserver_dot_v1_dot_service__pb2.CompareResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
